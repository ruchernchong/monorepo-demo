name: Version and Release

on:
  workflow_dispatch:
    inputs:
      package:
        description: 'Package to version (shared, app-a, app-b, or all)'
        required: true
        default: 'all'
      version:
        description: 'Version bump type (patch, minor, major)'
        required: true
        default: 'patch'

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - uses: pnpm/action-setup@v3
        with:
          version: 10.5.2
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Configure Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
      
      - name: Version shared package
        if: ${{ github.event.inputs.package == 'shared' || github.event.inputs.package == 'all' }}
        working-directory: packages/shared
        run: |
          npm version ${{ github.event.inputs.version }} -m "chore(shared): bump version to %s"
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "Shared package versioned to $NEW_VERSION"
      
      - name: Version app-a
        if: ${{ github.event.inputs.package == 'app-a' || github.event.inputs.package == 'all' }}
        working-directory: apps/app-a
        run: |
          npm version ${{ github.event.inputs.version }} -m "chore(app-a): bump version to %s"
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "App A versioned to $NEW_VERSION"
      
      - name: Version app-b
        if: ${{ github.event.inputs.package == 'app-b' || github.event.inputs.package == 'all' }}
        working-directory: apps/app-b
        run: |
          npm version ${{ github.event.inputs.version }} -m "chore(app-b): bump version to %s"
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "App B versioned to $NEW_VERSION"
      
      - name: Push changes
        run: git push --follow-tags
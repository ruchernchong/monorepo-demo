name: Nx CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - uses: pnpm/action-setup@v3
        with:
          version: 10.5.2
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install
      
      # Derive appropriate SHAs for base and head for `nx affected` commands
      - uses: nrwl/nx-set-shas@v3
      
      # Run affected tests
      - name: Test affected projects
        run: |
          pnpm nx affected --target=test --base=${{ env.NX_BASE }} --head=${{ env.NX_HEAD }}
      
      # Build all affected apps
      - name: Build affected apps
        run: |
          pnpm nx affected --target=build --base=${{ env.NX_BASE }} --head=${{ env.NX_HEAD }}
      
      # Deploy affected apps (only on main branch)
      - name: Deploy affected apps
        if: github.ref == 'refs/heads/main'
        run: |
          # Here you would typically use nx affected to deploy only the affected apps
          # For example, you might want to:
          # 1. Get the list of affected apps
          AFFECTED_APPS=$(pnpm nx affected:apps --base=${{ env.NX_BASE }} --head=${{ env.NX_HEAD }} --plain)
          echo "Affected apps: $AFFECTED_APPS"
          
          # 2. Deploy each affected app
          if [[ $AFFECTED_APPS == *"app-a"* ]]; then
            echo "Deploying app-a"
            # Add deployment command for app-a
            # For example: pnpm nx deploy app-a
          fi
          
          if [[ $AFFECTED_APPS == *"app-b"* ]]; then
            echo "Deploying app-b"
            # Add deployment command for app-b
            # For example: pnpm nx deploy app-b
          fi